/*
 * This file is generated by jOOQ.
 */
package today.ihelio.jooq.tables.daos;


import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import today.ihelio.jooq.tables.Hashtags;
import today.ihelio.jooq.tables.records.HashtagsRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HashtagsDao extends DAOImpl<HashtagsRecord, today.ihelio.jooq.tables.pojos.Hashtags, Integer> {

    /**
     * Create a new HashtagsDao without any configuration
     */
    public HashtagsDao() {
        super(Hashtags.HASHTAGS, today.ihelio.jooq.tables.pojos.Hashtags.class);
    }

    /**
     * Create a new HashtagsDao with an attached configuration
     */
    public HashtagsDao(Configuration configuration) {
        super(Hashtags.HASHTAGS, today.ihelio.jooq.tables.pojos.Hashtags.class, configuration);
    }

    @Override
    public Integer getId(today.ihelio.jooq.tables.pojos.Hashtags object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<today.ihelio.jooq.tables.pojos.Hashtags> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Hashtags.HASHTAGS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<today.ihelio.jooq.tables.pojos.Hashtags> fetchById(Integer... values) {
        return fetch(Hashtags.HASHTAGS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public today.ihelio.jooq.tables.pojos.Hashtags fetchOneById(Integer value) {
        return fetchOne(Hashtags.HASHTAGS.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<today.ihelio.jooq.tables.pojos.Hashtags> fetchOptionalById(Integer value) {
        return fetchOptional(Hashtags.HASHTAGS.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<today.ihelio.jooq.tables.pojos.Hashtags> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Hashtags.HASHTAGS.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<today.ihelio.jooq.tables.pojos.Hashtags> fetchByName(String... values) {
        return fetch(Hashtags.HASHTAGS.NAME, values);
    }

    /**
     * Fetch a unique record that has <code>name = value</code>
     */
    public today.ihelio.jooq.tables.pojos.Hashtags fetchOneByName(String value) {
        return fetchOne(Hashtags.HASHTAGS.NAME, value);
    }

    /**
     * Fetch a unique record that has <code>name = value</code>
     */
    public Optional<today.ihelio.jooq.tables.pojos.Hashtags> fetchOptionalByName(String value) {
        return fetchOptional(Hashtags.HASHTAGS.NAME, value);
    }
}
