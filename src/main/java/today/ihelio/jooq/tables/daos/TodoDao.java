/*
 * This file is generated by jOOQ.
 */
package today.ihelio.jooq.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import today.ihelio.jooq.tables.Todo;
import today.ihelio.jooq.tables.records.TodoRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TodoDao extends DAOImpl<TodoRecord, today.ihelio.jooq.tables.pojos.Todo, String> {

    /**
     * Create a new TodoDao without any configuration
     */
    public TodoDao() {
        super(Todo.TODO, today.ihelio.jooq.tables.pojos.Todo.class);
    }

    /**
     * Create a new TodoDao with an attached configuration
     */
    public TodoDao(Configuration configuration) {
        super(Todo.TODO, today.ihelio.jooq.tables.pojos.Todo.class, configuration);
    }

    @Override
    public String getId(today.ihelio.jooq.tables.pojos.Todo object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<today.ihelio.jooq.tables.pojos.Todo> fetchRangeOfId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Todo.TODO.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<today.ihelio.jooq.tables.pojos.Todo> fetchById(String... values) {
        return fetch(Todo.TODO.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public today.ihelio.jooq.tables.pojos.Todo fetchOneById(String value) {
        return fetchOne(Todo.TODO.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<today.ihelio.jooq.tables.pojos.Todo> fetchOptionalById(String value) {
        return fetchOptional(Todo.TODO.ID, value);
    }

    /**
     * Fetch records that have <code>content BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<today.ihelio.jooq.tables.pojos.Todo> fetchRangeOfContent(String lowerInclusive, String upperInclusive) {
        return fetchRange(Todo.TODO.CONTENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>content IN (values)</code>
     */
    public List<today.ihelio.jooq.tables.pojos.Todo> fetchByContent(String... values) {
        return fetch(Todo.TODO.CONTENT, values);
    }

    /**
     * Fetch records that have <code>is_done BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<today.ihelio.jooq.tables.pojos.Todo> fetchRangeOfIsDone(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Todo.TODO.IS_DONE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_done IN (values)</code>
     */
    public List<today.ihelio.jooq.tables.pojos.Todo> fetchByIsDone(Integer... values) {
        return fetch(Todo.TODO.IS_DONE, values);
    }

    /**
     * Fetch records that have <code>category BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<today.ihelio.jooq.tables.pojos.Todo> fetchRangeOfCategory(String lowerInclusive, String upperInclusive) {
        return fetchRange(Todo.TODO.CATEGORY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>category IN (values)</code>
     */
    public List<today.ihelio.jooq.tables.pojos.Todo> fetchByCategory(String... values) {
        return fetch(Todo.TODO.CATEGORY, values);
    }

    /**
     * Fetch records that have <code>hashtags BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<today.ihelio.jooq.tables.pojos.Todo> fetchRangeOfHashtags(String lowerInclusive, String upperInclusive) {
        return fetchRange(Todo.TODO.HASHTAGS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>hashtags IN (values)</code>
     */
    public List<today.ihelio.jooq.tables.pojos.Todo> fetchByHashtags(String... values) {
        return fetch(Todo.TODO.HASHTAGS, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<today.ihelio.jooq.tables.pojos.Todo> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Todo.TODO.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<today.ihelio.jooq.tables.pojos.Todo> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(Todo.TODO.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>is_deleted BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<today.ihelio.jooq.tables.pojos.Todo> fetchRangeOfIsDeleted(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Todo.TODO.IS_DELETED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_deleted IN (values)</code>
     */
    public List<today.ihelio.jooq.tables.pojos.Todo> fetchByIsDeleted(Integer... values) {
        return fetch(Todo.TODO.IS_DELETED, values);
    }
}
