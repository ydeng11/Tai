/*
 * This file is generated by jOOQ.
 */
package today.ihelio.jooq.tables.records;


import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import today.ihelio.jooq.tables.Todo;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TodoRecord extends UpdatableRecordImpl<TodoRecord> implements Record7<String, String, Integer, String, String, LocalDateTime, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>todo.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>todo.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>todo.content</code>.
     */
    public void setContent(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>todo.content</code>.
     */
    public String getContent() {
        return (String) get(1);
    }

    /**
     * Setter for <code>todo.is_done</code>.
     */
    public void setIsDone(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>todo.is_done</code>.
     */
    public Integer getIsDone() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>todo.category</code>.
     */
    public void setCategory(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>todo.category</code>.
     */
    public String getCategory() {
        return (String) get(3);
    }

    /**
     * Setter for <code>todo.hashtags</code>.
     */
    public void setHashtags(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>todo.hashtags</code>.
     */
    public String getHashtags() {
        return (String) get(4);
    }

    /**
     * Setter for <code>todo.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>todo.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>todo.is_deleted</code>.
     */
    public void setIsDeleted(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>todo.is_deleted</code>.
     */
    public Integer getIsDeleted() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<String, String, Integer, String, String, LocalDateTime, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<String, String, Integer, String, String, LocalDateTime, Integer> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Todo.TODO.ID;
    }

    @Override
    public Field<String> field2() {
        return Todo.TODO.CONTENT;
    }

    @Override
    public Field<Integer> field3() {
        return Todo.TODO.IS_DONE;
    }

    @Override
    public Field<String> field4() {
        return Todo.TODO.CATEGORY;
    }

    @Override
    public Field<String> field5() {
        return Todo.TODO.HASHTAGS;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Todo.TODO.CREATED_AT;
    }

    @Override
    public Field<Integer> field7() {
        return Todo.TODO.IS_DELETED;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getContent();
    }

    @Override
    public Integer component3() {
        return getIsDone();
    }

    @Override
    public String component4() {
        return getCategory();
    }

    @Override
    public String component5() {
        return getHashtags();
    }

    @Override
    public LocalDateTime component6() {
        return getCreatedAt();
    }

    @Override
    public Integer component7() {
        return getIsDeleted();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getContent();
    }

    @Override
    public Integer value3() {
        return getIsDone();
    }

    @Override
    public String value4() {
        return getCategory();
    }

    @Override
    public String value5() {
        return getHashtags();
    }

    @Override
    public LocalDateTime value6() {
        return getCreatedAt();
    }

    @Override
    public Integer value7() {
        return getIsDeleted();
    }

    @Override
    public TodoRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public TodoRecord value2(String value) {
        setContent(value);
        return this;
    }

    @Override
    public TodoRecord value3(Integer value) {
        setIsDone(value);
        return this;
    }

    @Override
    public TodoRecord value4(String value) {
        setCategory(value);
        return this;
    }

    @Override
    public TodoRecord value5(String value) {
        setHashtags(value);
        return this;
    }

    @Override
    public TodoRecord value6(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public TodoRecord value7(Integer value) {
        setIsDeleted(value);
        return this;
    }

    @Override
    public TodoRecord values(String value1, String value2, Integer value3, String value4, String value5, LocalDateTime value6, Integer value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TodoRecord
     */
    public TodoRecord() {
        super(Todo.TODO);
    }

    /**
     * Create a detached, initialised TodoRecord
     */
    public TodoRecord(String id, String content, Integer isDone, String category, String hashtags, LocalDateTime createdAt, Integer isDeleted) {
        super(Todo.TODO);

        setId(id);
        setContent(content);
        setIsDone(isDone);
        setCategory(category);
        setHashtags(hashtags);
        setCreatedAt(createdAt);
        setIsDeleted(isDeleted);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised TodoRecord
     */
    public TodoRecord(today.ihelio.jooq.tables.pojos.Todo value) {
        super(Todo.TODO);

        if (value != null) {
            setId(value.getId());
            setContent(value.getContent());
            setIsDone(value.getIsDone());
            setCategory(value.getCategory());
            setHashtags(value.getHashtags());
            setCreatedAt(value.getCreatedAt());
            setIsDeleted(value.getIsDeleted());
            resetChangedOnNotNull();
        }
    }
}
