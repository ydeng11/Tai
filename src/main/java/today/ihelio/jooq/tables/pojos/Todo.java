/*
 * This file is generated by jOOQ.
 */
package today.ihelio.jooq.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Todo implements Serializable {

    private static final long serialVersionUID = 1L;

    private String id;
    private String content;
    private Integer isDone;
    private String category;
    private String hashtags;
    private LocalDateTime createdAt;
    private Integer isDeleted;

    public Todo() {}

    public Todo(Todo value) {
        this.id = value.id;
        this.content = value.content;
        this.isDone = value.isDone;
        this.category = value.category;
        this.hashtags = value.hashtags;
        this.createdAt = value.createdAt;
        this.isDeleted = value.isDeleted;
    }

    public Todo(
        String id,
        String content,
        Integer isDone,
        String category,
        String hashtags,
        LocalDateTime createdAt,
        Integer isDeleted
    ) {
        this.id = id;
        this.content = content;
        this.isDone = isDone;
        this.category = category;
        this.hashtags = hashtags;
        this.createdAt = createdAt;
        this.isDeleted = isDeleted;
    }

    /**
     * Getter for <code>todo.id</code>.
     */
    public String getId() {
        return this.id;
    }

    /**
     * Setter for <code>todo.id</code>.
     */
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for <code>todo.content</code>.
     */
    public String getContent() {
        return this.content;
    }

    /**
     * Setter for <code>todo.content</code>.
     */
    public void setContent(String content) {
        this.content = content;
    }

    /**
     * Getter for <code>todo.is_done</code>.
     */
    public Integer getIsDone() {
        return this.isDone;
    }

    /**
     * Setter for <code>todo.is_done</code>.
     */
    public void setIsDone(Integer isDone) {
        this.isDone = isDone;
    }

    /**
     * Getter for <code>todo.category</code>.
     */
    public String getCategory() {
        return this.category;
    }

    /**
     * Setter for <code>todo.category</code>.
     */
    public void setCategory(String category) {
        this.category = category;
    }

    /**
     * Getter for <code>todo.hashtags</code>.
     */
    public String getHashtags() {
        return this.hashtags;
    }

    /**
     * Setter for <code>todo.hashtags</code>.
     */
    public void setHashtags(String hashtags) {
        this.hashtags = hashtags;
    }

    /**
     * Getter for <code>todo.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>todo.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for <code>todo.is_deleted</code>.
     */
    public Integer getIsDeleted() {
        return this.isDeleted;
    }

    /**
     * Setter for <code>todo.is_deleted</code>.
     */
    public void setIsDeleted(Integer isDeleted) {
        this.isDeleted = isDeleted;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Todo other = (Todo) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.content == null) {
            if (other.content != null)
                return false;
        }
        else if (!this.content.equals(other.content))
            return false;
        if (this.isDone == null) {
            if (other.isDone != null)
                return false;
        }
        else if (!this.isDone.equals(other.isDone))
            return false;
        if (this.category == null) {
            if (other.category != null)
                return false;
        }
        else if (!this.category.equals(other.category))
            return false;
        if (this.hashtags == null) {
            if (other.hashtags != null)
                return false;
        }
        else if (!this.hashtags.equals(other.hashtags))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.isDeleted == null) {
            if (other.isDeleted != null)
                return false;
        }
        else if (!this.isDeleted.equals(other.isDeleted))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.content == null) ? 0 : this.content.hashCode());
        result = prime * result + ((this.isDone == null) ? 0 : this.isDone.hashCode());
        result = prime * result + ((this.category == null) ? 0 : this.category.hashCode());
        result = prime * result + ((this.hashtags == null) ? 0 : this.hashtags.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.isDeleted == null) ? 0 : this.isDeleted.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Todo (");

        sb.append(id);
        sb.append(", ").append(content);
        sb.append(", ").append(isDone);
        sb.append(", ").append(category);
        sb.append(", ").append(hashtags);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(isDeleted);

        sb.append(")");
        return sb.toString();
    }
}
